name: determinism

on:
  push:
  pull_request:

jobs:
  record-replay:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install SDL2 (for sdl2 crate)
        run: sudo apt-get update && sudo apt-get install -y libsdl2-dev

      - name: Build (release)
        run: cargo build --release

      - name: Record 1200 ticks
        id: record
        run: |
          set -euo pipefail
          REC_OUT=$(xvfb-run -a target/release/anvil --record=ci.bin --ticks=1200 | tee /dev/stderr)
          echo "rec_out<<EOF" >> $GITHUB_OUTPUT
          echo "$REC_OUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Replay
        id: replay
        run: |
          set -euo pipefail
          REP_OUT=$(xvfb-run -a target/release/anvil --replay=ci.bin | tee /dev/stderr)
          echo "rep_out<<EOF" >> $GITHUB_OUTPUT
          echo "$REP_OUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Compare final hash & tick
        run: |
          set -euo pipefail
          REC_HASH=$(echo "${{ steps.record.outputs.rec_out }}" | sed -n 's/.*FINAL .*world_hash=\(0x[0-9a-fA-F]\+\).*/\1/p' | tail -n1)
          REP_HASH=$(echo "${{ steps.replay.outputs.rep_out }}" | sed -n 's/.*FINAL .*world_hash=\(0x[0-9a-fA-F]\+\).*/\1/p' | tail -n1)
          REC_TICK=$(echo "${{ steps.record.outputs.rec_out }}" | sed -n 's/.*FINAL end_tick=\([0-9]\+\).*/\1/p' | tail -n1)
          REP_TICK=$(echo "${{ steps.replay.outputs.rep_out }}" | sed -n 's/.*FINAL end_tick=\([0-9]\+\).*/\1/p' | tail -n1)

          echo "REC_HASH=$REC_HASH"
          echo "REP_HASH=$REP_HASH"
          echo "REC_TICK=$REC_TICK"
          echo "REP_TICK=$REP_TICK"

          test -n "$REC_HASH" && test -n "$REP_HASH" && test -n "$REC_TICK" && test -n "$REP_TICK"
          test "$REC_HASH" = "$REP_HASH"
          test "$REC_TICK" = "$REP_TICK"
